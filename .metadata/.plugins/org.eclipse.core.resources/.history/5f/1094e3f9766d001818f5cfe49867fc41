package ro.edu.ubb.util;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

/**
 * Interface which contains constants for database connection.
 * 
 * @author Nemet Orsolya, noim1553, 532/1 csoport
 *
 */
public class ConnectionManager {
	private static final String DRIVER = "com.mysql.jdbc.Driver";
	private static final String CONNECTION = "jdbc:mysql://localhost:3366/webproj";
	private static final String USERNAME = "root";
	private static final String PASS = "11235813";
	private Connection connection;
	private static ConnectionManager cm;


    public static Connection getConnection() {
        // work
//        url = "jdbc:mysql://127.0.0.1:3306/mydb?user=root&password=1234";
        String url = "jdbc:mysql://127.0.0.1:3306/mydb";
       //home
//        url = "jdbc:mysql://127.0.0.1:3306/mydb?user=user&password=1234";
//        url = "jdbc:mysql://127.0.0.1:3306/mydb";
        try {

//            try {
//                Class.forName("com.mysql.jdbc.Driver");
//            } catch (ClassNotFoundException e) {
//                System.out.println("\nDriver not found....\n");
//                e.printStackTrace();
//            }

            Driver dr = new com.mysql.jdbc.Driver();
            Properties properties = new Properties();
            properties.put("user","root");
//            properties.put("user","user");
            properties.put("password","1234");

            con = dr. connect(url,properties);

//            con = DriverManager.getConnection(url);
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return con;
    }
	public ConnectionManager() {
		try {
			Class.forName("com.mysql.jdbc.Driver");
		} catch (ClassNotFoundException e) {
			throw new UtilException("An error occured while ");
		}
	}

	public static ConnectionManager getInstance() {
		if (cm == null) {
			cm = new ConnectionManager();
		}
		return cm;
	}
	
	public Connection createConnection() {
		try {
			connection = DriverManager.getConnection(CONNECTION, USERNAME, PASS);
		} catch (SQLException e) {
			throw new UtilException("An error occured while creating database connection.");
		}
		return connection;
	}

	public void closeConnection(Connection connection) {
		try {
			connection.close();
		} catch (SQLException e) {
			throw new UtilException("An error occured while closing database connection.");
		}
	}
}
