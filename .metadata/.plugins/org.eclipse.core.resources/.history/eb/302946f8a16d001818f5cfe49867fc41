package ro.edu.ubb;

import java.io.IOException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import ro.edu.ubb.model.LetterChangeGameModel;

/**
 * @author Nemet Orsolya, noim1553, 532/1 csoport, Lab7 4.feladat
 *
 */
public class LetterChangeGame extends HttpServlet {

	/**
	 * 
	 */
	private static final long serialVersionUID = -663150891209934794L;
	private static final Integer WORD_LENGTH = 3;
	private LetterChangeGameModel model = new LetterChangeGameModel();

	@Override
	public void doGet(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		try {
			res.setContentType("text/html");
				model.setStartingWord(getInitParameter("start"));
				model.setStopingWord(getInitParameter("stop"));
				model.getWordList().add(model.getStartingWord());
				model.setWin(false);
				req.getSession().setAttribute("model", model);
				dispatch("/letterChangeGame.jsp", req, res);
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		try {
			Boolean isCorrectWord = true;
			model.setChanged(0);
			model.setWin(false);
			String newWord = req.getParameter("newWord");
			if (newWord != null && newWord != "") {
				if (newWord.length() != 3) {
					model.setMsgIncorrectWord("The new word should contain 3 letters!");
					isCorrectWord = false;
				} else {
					for (int i = 0; i < WORD_LENGTH; i++) {
						if (model.getWordList().get(model.getWordList().size() - 1).charAt(i) != newWord.charAt(i)) {
							model.setChanged(model.getChanged() + 1);
						}
					}
					if (model.getChanged() != 1) {
						model.setMsgIncorrectWord("You should replace one letter!");
						isCorrectWord = false;
					}
					if (isCorrectWord) {
						model.getWordList().add(newWord);
						if (newWord.equals(model.getStopingWord())) {
							model.setWin(true);
						}
					}
				}
			}
			if (!model.getWin()) {
				req.getSession().setAttribute("model", model);
				dispatch("/letterChangeGame.jsp", req, res);
				model.setMsgIncorrectWord("");
			} else {
				model.setChanged(0);
				model.getWordList().clear();
				model.getWordList().add(model.getStartingWord());
				model.setWin(false);
				req.getSession().setAttribute("model", model);
				dispatch("/restart.jsp", req, res);
			}

		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}

	public void dispatch(String jsp, HttpServletRequest req, HttpServletResponse res)
			throws ServletException, IOException {
		if (jsp != null) {
			RequestDispatcher rd = req.getRequestDispatcher(jsp);
			rd.forward(req, res);
		}
	}

}
